---
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import StackIcon, { type Props as StackIconProps } from "./StackIcon.astro";
import classNames from "classnames";

const projects: Array<{
  title: string;
  link: string;
  description: string;
  stack: Array<StackIconProps["stack"]>;
}> = [
  {
    title: "React CSS modules",
    link: "https://marketplace.visualstudio.com/items?itemName=viijay-kr.react-ts-css",
    description:
      "VS Code Extension for CSS modules in typescript based react projects",
    stack: ["ts"],
  },
  {
    title: "Typescript cleanup definitions",
    link: "https://github.com/Viijay-Kr/typescript-cleanup-definitions",
    description:
      "A simple typescript plugin that filters out [Go to definition] results from any given declaration file",
    stack: ["ts"],
  },
  {
    title: "Typescript React classnames",
    link: "https://github.com/Viijay-Kr/ts-transform-react-display-name",
    description:
      "Typescript transformer plugin for appending display name property to React Components.",
    stack: ["ts"],
  },
  {
    title: "Browser Scan",
    link: "https://github.com/Viijay-Kr/browser-scan",
    description:
      "Browser Scan lets you scan your CSS rules against various browsers for compatibility",
    stack: ["ts", "react", "chakraui"],
  },
  {
    title: "Cleadil docs",
    link: "https://docs.cleardil.com",
    description: "Documentation revamp for cleardil.com",
    stack: ["astro", "mdx", "tailwind"],
  },
  {
    title: "MongoDB Aggregation Types",
    link: "https://github.com/Viijay-Kr/mongodb-aggregation-dts",
    description:
      "Type definitions for MongoDB aggregation pipelines and operators",
    stack: ["ts", "mongodb", "bun"],
  },
  {
    title: "My own insights",
    link: "https://analytics.vijayakrishna.dev/",
    description: "Analytics app for my website and blog",
    stack: ["nextjs", "mongodb", "vercel"],
  },
  {
    title: "Markdoc Traverse",
    link: "https://github.com/Viijay-Kr/markdoc-traverse",
    description: "A type safe traversal library for MakDoc AST",
    stack: ["ts"],
  },
  {
    title: "Prisma Visualise",
    link: "https://github.com/Viijay-Kr/prisma-visualise",
    description: "Visualise your 'Prisma' schema in your command line",
    stack: ["rust", "react"],
  },
];
---

<section>
  <h2 class="mt-12 mb-2 flex text-accent-foreground/80 text-2xl font-bold">
    Projects
  </h2>
  <div class="grid md:grid-cols-6 gap-2">
    {
      projects.map((project, index) => (
        <a
          class={classNames(
            "project-links",
            "self-start col-span-2 animate-duration-700 cursor-pointer",
            index % 2 === 0 ? "animate-fade-up" : "animate-fade-down",
            (index === 0 || index === 1 || index === 2 || index === 3) &&
              "md:col-span-3"
          )}
          href={project.link}
          target="_blank"
          title={project.title}
        >
          <Card
            onClick={() => {
              window.Insights.track({
                type: "click",
                meta: {
                  title: project.title,
                  source: "projects",
                  value: project.link,
                },
              });
            }}
          >
            <CardHeader className="pb-2">
              <CardTitle className="text-lg text-primary flex items-center gap-2">
                {project.title}
              </CardTitle>
            </CardHeader>
            <CardContent className="py-2">
              <p class="font-medium text-muted-foreground">
                {project.description}
              </p>
            </CardContent>
            <CardFooter className="flex items-center gap-4">
              {project.stack.map((s) => (
                <StackIcon stack={s as StackIconProps["stack"]} />
              ))}
            </CardFooter>
          </Card>
        </a>
      ))
    }
  </div>
</section>

<style>
  .tile {
    grid-column: span 2;
  }
  .tile.tile:nth-child(1),
  .tile:nth-child(2),
  .tile.tile:nth-child(3),
  .tile.tile:nth-child(4) {
    grid-column: span 3;
  }
</style>

<script>
  const links = document.querySelectorAll(".project-links");
  links.forEach((el) => {
    const title = el.getAttribute("title") ?? "";
    const href = el.getAttribute("href") ?? "";
    el.addEventListener("click", () => {
      window.Insights.track({
        type: "click",
        meta: {
          title,
          value: href,
          source: "projects",
        },
      });
    });
  });
</script>
